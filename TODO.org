* Introduction to PyPSO

The name refers to:
- Python, the programming language
- Particle Swarm Optimization (PSO), a search heuristic

The two above are combined with NEC2, antenna modelling software, to perform
semi-automatic antenna design. The idea is following:
- 1 :: take an initial guess for a yagi antenna, which has: 
  - a given number of elements, approximately good lengths and positions
  - long enough boom
- 2 :: define which P parameters to optimize (elem. lengths and positions)
- 3 :: define a univariate evaluation criterion (say, an equation based on
       SWR & F/B ratio at given frequency band)
- 4 :: generate a "cloud" of N proposed antenna designs by randomly varying
       the free parameters (2)
- 5 :: evaluate each of the proposed antennas
  - run NEC2
  - calculate the evaluation function (3)
- 6 :: modify each of the designs in terms of PSO
  - the parameter vector is a point in P-dimensional space
  - each antenna design (particle) has inertia,
  - but also attracted towards the best of the current N designs 
    (or the best neighbor to give SOM-like behavior / locality?)
- 7 :: if all the variants seem converged to a single design, quit
  - else, move to (5) for next iteration
- 8 :: if the end result looks like crap, jump to (1)

Author: Janne Toivola, OH2GXN


* Sources of information

** Sane initial guess
From: http://273k.net/gsm/designing-and-building-a-gsm-antenna/yagi/
----
"The Driven Element is a dipole which consists of two 1/4 wavelength
elements. The Reflector is slightly bigger then the driven element and
reflects the signal back towards the driven element. The Directors are
slightly smaller then the driven element with each one being slightly smaller
again as they move away from the driven element, the directors help to focus
the signal giving it a higher gain. The main gain is directed in the same
direction as the arrow.

The design of a yagi antenna is much more complex and requires a lot more
experimentation then a monopole antenna. I don't believe there is any known
simple mathematical formula that can be used to design a yagi antenna. Am I
correct?

What we do have is a rule of thumb which gives a start pointing when
designing a yagi antenna. The idea is to scale up the reflector element by
about 5% over the driven element, and to scale down the first director
elements by about 5%, and to scale down again by about 5% for each extra
director. The spacing between each of the elements would be about 20% of a
wavelength, these can also be scaled down for each director.

Using this starting point you can adjusted each of the elements lengths and
there offsets until you find the best preforming design. These adjustments
can be easily and quickly made using antenna design software."
----

* Progress
** TODO NEC file generator
- learn how to write a yagi description, given element dimensions
** TODO NEC result parser
- see what the output looks like
** TODO Evaluation function editor
- text box -> sanitized string
- Python can "eval(string)"
** TODO Evaluation result visualization
- plot goodness vs. iteration curves for each particle, live update
- separate plots for individual terms (like F/B ratio)
** TODO PSO update rule
- inertia vs. attraction towards winner
- initial position and also initial momentum?
